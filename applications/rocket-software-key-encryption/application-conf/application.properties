# Build properties used by zAppBuild/build.groovy


#
# exclude list used when scanning or running full build
excludeFileList=.*,**/.*,**/*.properties,**/*.xml,**/*.groovy,**/*.json, \
    **/*.md,**/application-conf/*.*,**/*.rex,**/*.rexx

#
# comma-separated list of file patterns for which impact calculation should be skipped. Uses glob file patterns
# sample: skipImpactCalculationList=**/epsmtout.cpy,**/centralCopybooks/*.cpy
skipImpactCalculationList=

# relative path to folder containing individual artifact properties files
# assumed to be relative to ${workspace}/${application}
propertyFilePath=properties

# file extension for individual artifact properties files
# default: properties
propertyFileExtension=properties

#
# SearchPathImpactFinder resolution searchPath configuration
#  list of multiple search path configurations which are defined below
#
# this configuration is used when running zAppBuild with the --impactBuild option
#  to calculate impacted files based on the identified changed files
impactSearch=${copybookSearch}${pliincludeSearch}${bmsSearch}${linkSearch}${rexxCopySearch}${zunitTestConfigSearch}${zunitTestcasePgmSearch}


#
# pliincludeSearch
# searchPath to locate PLI include files
# used in dependency resolution and impact analysis
pliincludeSearch = search:${workspace}/?path=${application}/plinc/*.cpy

# asmMacroSearch
# searchPath to locate Assembler macro files
# use category filters on what you want to include during the scan (i.e. excludes macro-def keyword)
# used in dependency resolution and impact analysis
asmMacroSearch = search:[SYSLIB:MACRO]${workspace}/?path=${application}/maclib/*.mac

# asmCopySearch
# searchPath to locate Assembler copy files
# used in dependency resolution and impact analysis
asmCopySearch = search:[SYSLIB:COPY]${workspace}/?path=${application}/maclib/*.mac

#
# bmsSearch
# searchPath to locate impacted bms maps
# used only in impact analysis
bmsSearch = search:${workspace}/?path=${application}/bms/*.bms

#
# rexxCopySearch
# searchPath to locate rexx copy - defaults to the local rexx folder in the main application folder
# used in dependency resolution and impact analysis
rexxCopySearch = search:[SYSLIB:COPY]${workspace}/?path=${application}/rexx/*.rexx

#
# linkSearch
#
# searchPath to locate impacted linkcards or main programs after an included submodule is changed
# leverages the output collection, which has the dependency info from the executable
# category LINK only; used only in impact analysis
#
# Additional samples:
#
# impact resolution across all directories in build workspace, but filtering on the file extension cbl:
# staticLinkSearch = search:[:LINK]${workspace}/?path=**/*.cbl
#
# impact resolution across all directories in build workspace, but filtering on the file extension cbl and pli (for cobol and pli submodules):
# staticLinkSearch = search:[:LINK]${workspace}/?path=**/*.cbl,**/*.pli
#
# More samples can be found along with the syntax for the search path configurations at:
# https://www.ibm.com/docs/en/dbb/2.0.0?topic=apis-dependency-impact-resolution#6-resolving-logical-build-dependencies-to-local-physical-files
#
# Special case with Dependency Scanner Transfer Control Statement capturing turned on (default is off)
# the scanners detect a static call to the literal, which would need to turn into a new rule for CALL:
# staticCallSearch = search:[:CALL]${workspace}/?path=${application}/cobol/*.cbl
#
linkSearch = search:[:LINK]${workspace}/?path=${application}/cobol/*.cbl

# zunitTestConfigSearch
# searchPath to locate zunit config files
# used in impact analysis
zunitTestConfigSearch = search:[:ZUNITINC]${workspace}/?path=${application}/cobol/*.cbl;${application}/pli/*.pli;${application}/testcase/*.cbl;${application}/testcase/*.pli

#
# zunitPlayfileSearch
# searchPath to locate zunit playback files
# used in dependency resolution
zunitPlayfileSearch = search:[SYSPLAY:]${workspace}/?path=${application}/testplayfiles/*.bzuplay

#
# zunitTestcasePgmSearch
# searchPath to locate impacted test case programs
# see also build-conf/build.properties -> createTestcaseDependency
# used in impact analysis
zunitTestcasePgmSearch = search:[SYSPROG:PROGRAMDEPENDENCY]${workspace}/?path=${application}/cobol/*.cbl;${application}/pli/*.pli


